// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SQU4D.Data.Context;

#nullable disable

namespace SQU4D.Migrations
{
    [DbContext(typeof(Squ4dContext))]
    [Migration("20231015145735_atualizando")]
    partial class atualizando
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SQU4D.Data.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcknowledgementStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AlertApiId")
                        .HasColumnType("int");

                    b.Property<int?>("Bus")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefinitionBus")
                        .HasColumnType("int");

                    b.Property<string>("DefinitionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionFailureModeIndicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("DefinitionLinkRel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionLinkType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionLinkUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionSourceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionSuspectParameterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionThreeLetterAcronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefinitionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DurationValue")
                        .HasColumnType("float");

                    b.Property<string>("EngineHoursType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineHoursUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EngineHoursValue")
                        .HasColumnType("float");

                    b.Property<bool>("Ignored")
                        .HasColumnType("bit");

                    b.Property<bool>("Invisible")
                        .HasColumnType("bit");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<string>("LinkRel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lon")
                        .HasColumnType("float");

                    b.Property<int>("MachineLinearTime")
                        .HasColumnType("int");

                    b.Property<string>("Occurrences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("SQU4D.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
